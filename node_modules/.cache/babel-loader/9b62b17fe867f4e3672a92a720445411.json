{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar getTextContentAccessor = require('./getTextContentAccessor');\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\n\n\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\nmodule.exports = FallbackCompositionState;","map":{"version":3,"names":["_assign","require","PooledClass","getTextContentAccessor","FallbackCompositionState","root","_root","_startText","getText","_fallbackText","prototype","destructor","value","getData","start","startValue","startLength","length","end","endValue","endLength","minEnd","sliceTail","undefined","slice","addPoolingTo","module","exports"],"sources":["C:/Users/putha/node_modules/react-dom/lib/FallbackCompositionState.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,sBAAsB,GAAGF,OAAO,CAAC,0BAAD,CAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,wBAAT,CAAkCC,IAAlC,EAAwC;EACtC,KAAKC,KAAL,GAAaD,IAAb;EACA,KAAKE,UAAL,GAAkB,KAAKC,OAAL,EAAlB;EACA,KAAKC,aAAL,GAAqB,IAArB;AACD;;AAEDT,OAAO,CAACI,wBAAwB,CAACM,SAA1B,EAAqC;EAC1CC,UAAU,EAAE,YAAY;IACtB,KAAKL,KAAL,GAAa,IAAb;IACA,KAAKC,UAAL,GAAkB,IAAlB;IACA,KAAKE,aAAL,GAAqB,IAArB;EACD,CALyC;;EAO1C;AACF;AACA;AACA;AACA;EACED,OAAO,EAAE,YAAY;IACnB,IAAI,WAAW,KAAKF,KAApB,EAA2B;MACzB,OAAO,KAAKA,KAAL,CAAWM,KAAlB;IACD;;IACD,OAAO,KAAKN,KAAL,CAAWH,sBAAsB,EAAjC,CAAP;EACD,CAjByC;;EAmB1C;AACF;AACA;AACA;AACA;AACA;EACEU,OAAO,EAAE,YAAY;IACnB,IAAI,KAAKJ,aAAT,EAAwB;MACtB,OAAO,KAAKA,aAAZ;IACD;;IAED,IAAIK,KAAJ;IACA,IAAIC,UAAU,GAAG,KAAKR,UAAtB;IACA,IAAIS,WAAW,GAAGD,UAAU,CAACE,MAA7B;IACA,IAAIC,GAAJ;IACA,IAAIC,QAAQ,GAAG,KAAKX,OAAL,EAAf;IACA,IAAIY,SAAS,GAAGD,QAAQ,CAACF,MAAzB;;IAEA,KAAKH,KAAK,GAAG,CAAb,EAAgBA,KAAK,GAAGE,WAAxB,EAAqCF,KAAK,EAA1C,EAA8C;MAC5C,IAAIC,UAAU,CAACD,KAAD,CAAV,KAAsBK,QAAQ,CAACL,KAAD,CAAlC,EAA2C;QACzC;MACD;IACF;;IAED,IAAIO,MAAM,GAAGL,WAAW,GAAGF,KAA3B;;IACA,KAAKI,GAAG,GAAG,CAAX,EAAcA,GAAG,IAAIG,MAArB,EAA6BH,GAAG,EAAhC,EAAoC;MAClC,IAAIH,UAAU,CAACC,WAAW,GAAGE,GAAf,CAAV,KAAkCC,QAAQ,CAACC,SAAS,GAAGF,GAAb,CAA9C,EAAiE;QAC/D;MACD;IACF;;IAED,IAAII,SAAS,GAAGJ,GAAG,GAAG,CAAN,GAAU,IAAIA,GAAd,GAAoBK,SAApC;IACA,KAAKd,aAAL,GAAqBU,QAAQ,CAACK,KAAT,CAAeV,KAAf,EAAsBQ,SAAtB,CAArB;IACA,OAAO,KAAKb,aAAZ;EACD;AArDyC,CAArC,CAAP;;AAwDAP,WAAW,CAACuB,YAAZ,CAAyBrB,wBAAzB;AAEAsB,MAAM,CAACC,OAAP,GAAiBvB,wBAAjB"},"metadata":{},"sourceType":"script"}