{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar ReactInputSelection = require('./ReactInputSelection');\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nvar isTextInputElement = require('./isTextInputElement');\n\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n  }\n};\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false; // Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\n\nvar hasListener = false;\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\n\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\n\n\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  } // Only fire when selection has actually changed.\n\n\n  var currentSelection = getSelection(activeElement);\n\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n    return syntheticEvent;\n  }\n\n  return null;\n}\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\n\n\nvar SelectEventPlugin = {\n  eventTypes: eventTypes,\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case 'topFocus':\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n\n        break;\n\n      case 'topBlur':\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n\n      case 'topMouseDown':\n        mouseDown = true;\n        break;\n\n      case 'topContextMenu':\n      case 'topMouseUp':\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n\n      case 'topSelectionChange':\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n\n      // falls through\n\n      case 'topKeyDown':\n      case 'topKeyUp':\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === 'onSelect') {\n      hasListener = true;\n    }\n  }\n};\nmodule.exports = SelectEventPlugin;","map":{"version":3,"names":["EventPropagators","require","ExecutionEnvironment","ReactDOMComponentTree","ReactInputSelection","SyntheticEvent","getActiveElement","isTextInputElement","shallowEqual","skipSelectionChangeEvent","canUseDOM","document","documentMode","eventTypes","select","phasedRegistrationNames","bubbled","captured","dependencies","activeElement","activeElementInst","lastSelection","mouseDown","hasListener","getSelection","node","hasSelectionCapabilities","start","selectionStart","end","selectionEnd","window","selection","anchorNode","anchorOffset","focusNode","focusOffset","range","createRange","parentElement","text","top","boundingTop","left","boundingLeft","constructSelectEvent","nativeEvent","nativeEventTarget","currentSelection","syntheticEvent","getPooled","type","target","accumulateTwoPhaseDispatches","SelectEventPlugin","extractEvents","topLevelType","targetInst","targetNode","getNodeFromInstance","contentEditable","didPutListener","inst","registrationName","listener","module","exports"],"sources":["C:/Users/putha/node_modules/react-dom/lib/SelectEventPlugin.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n  }\n};\n\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case 'topFocus':\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case 'topBlur':\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case 'topMouseDown':\n        mouseDown = true;\n        break;\n      case 'topContextMenu':\n      case 'topMouseUp':\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case 'topSelectionChange':\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case 'topKeyDown':\n      case 'topKeyUp':\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === 'onSelect') {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;"],"mappings":"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"},"metadata":{},"sourceType":"script"}